version: '3.8'

services:
  redis0:
    container_name: redis0
    build: ./7000
    image: redis:0
    ports:
      - '7000:7000'
    networks:
      redis:
        ipv4_address: 172.30.0.10
    depends_on:
      - redis1
      - redis2
      - redis3
      - redis4
      - redis5
    # tail -f to prevent the process from exiting
    command:
      - sh
      - -c
      - redis-server /etc/redis.conf --daemonize yes && redis-cli --cluster create 172.30.0.10:7000 172.30.0.11:7001 172.30.0.12:7002 172.30.0.13:7003 172.30.0.14:7004 172.30.0.15:7005 --cluster-replicas 1 --cluster-yes && tail -f
  redis1:
    container_name: redis1
    build: ./7001
    image: redis:1
    ports:
      # Client connection port
      - '7001:7001'
      # Data port
      - '17001:17001'
    networks:
      redis:
        ipv4_address: 172.30.0.11

  redis2:
    container_name: redis2
    build: ./7002
    image: redis:2
    ports:
      - '7002:7002'
      - '17002:17002'
    networks:
      redis:
        ipv4_address: 172.30.0.12

  redis3:
    container_name: redis3
    build: ./7003
    image: redis:3
    ports:
      - '7003:7003'
      - '17003:17003'
    networks:
      redis:
        ipv4_address: 172.30.0.13

  redis4:
    container_name: redis4
    build: ./7004
    image: redis:4
    ports:
      - '7004:7004'
      - '17004:17004'
    networks:
      redis:
        ipv4_address: 172.30.0.14

  redis5:
    container_name: redis5
    build: ./7005
    image: redis:5
    ports:
      - '7005:7005'
      - '17005:17005'
    networks:
      redis:
        ipv4_address: 172.30.0.15

networks:
  redis:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/24

version: '3.8'

services:
  redis0:
    container_name: redis0
    build: ./7000
    image: redis:0
    ports:
      - 7000:7000
    networks:
      redis:
        ipv4_address: 172.10.2.0
    depends_on:
      - redis1
      - redis2
      - redis3
      - redis4
      - redis5
    command: redis-server /etc/redis.conf --daemonize yes && redis-cli --cluster create 172.10.2.0:7000 172.10.2.1:7001 172.10.2.2:7002 172.10.2.3:7003 172.10.2.4:7004 172.10.2.5:7005 --cluster-replicas 1 --cluster-yes && tail -f

  redis1:
    container_name: redis1
    build: ./7001
    image: redis:1
    ports:
      - 7001:7001
    networks:
      redis:
        ipv4_address: 172.10.2.1
    command: redis-server /etc/redis.conf

  redis2:
    container_name: redis2
    build: ./7002
    image: redis:2
    ports:
      - 7002:7002
    networks:
      redis:
        ipv4_address: 172.10.2.2
    command: redis-server /etc/redis.conf

  redis3:
    container_name: redis3
    build: ./7003
    image: redis:3
    ports:
      - 7003:7003
    networks:
      redis:
        ipv4_address: 172.10.2.3
    command: redis-server /etc/redis.conf

  redis4:
    container_name: redis4
    build: ./7004
    image: redis:4
    ports:
      - 7004:7004
    networks:
      redis:
        ipv4_address: 172.10.2.4
    command: redis-server /etc/redis.conf

  redis5:
    container_name: redis5
    build: ./7005
    image: redis:5
    ports:
      - 7005:7005
    networks:
      redis:
        ipv4_address: 172.10.2.5
    command: redis-server /etc/redis.conf

networks:
  redis:
    driver: bridge
    ipam:
      config:
        - subnet: '172.10.2.0/24'
